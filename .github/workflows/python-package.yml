# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Celery

on:
  push:
    branches: [ 'master']
    paths:
        - '**.py'
        - '**.txt'
        - '.github/workflows/python-package.yml'
        - '**.toml'
  pull_request:
    branches: [ 'master']
    paths:
        - '**.py'
        - '**.txt'
        - '**.toml'
        - '.github/workflows/python-package.yml'

jobs:
  Unit:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', 'pypy-3.7', 'pypy-3.8']
        os: ["ubuntu-latest", "windows-latest"]
        exclude:
            - python-version: 'pypy-3.7'
              os: "windows-latest"
            - python-version: 'pypy-3.8'
              os: "windows-latest"
    steps:
    - name: Install apt packages
      if: startsWith(matrix.os, 'ubuntu-')
      run: |
        sudo apt update && sudo apt-get install -f libcurl4-openssl-dev libssl-dev libgnutls28-dev httping expect libmemcached-dev
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache
      uses: actions/cache@v3.0.2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key:
          ${{ matrix.python-version }}-${{matrix.os}}-${{ hashFiles('**/setup.py') }}
        restore-keys: |
          ${{ matrix.python-version }}-${{matrix.os}}

    - name: Install tox
      run: python -m pip install --upgrade pip tox tox-gh-actions
    - name: >
        Run tox for
        "${{ matrix.python-version }}-unit"
      timeout-minutes: 30
      run: |
        tox --verbose --verbose

    - uses: codecov/codecov-action@v3.1.0
      with:
        flags: unittests # optional
        fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)

  Integration:
      needs:
      - Unit
      if: needs.Unit.result == 'success'
      timeout-minutes: 240

      runs-on: ubuntu-latest
      strategy:
          fail-fast: false
          matrix:
              python-version: ['3.7', '3.8', '3.9', '3.10']
              toxenv: ['redis', 'rabbitmq']

      services:
          redis:
              image: redis
              ports:
                  - 6379:6379
              env:
                  REDIS_HOST: localhost
                  REDIS_PORT: 6379
          rabbitmq:
              image: rabbitmq
              ports:
                  - 5672:5672
              env:
                  RABBITMQ_DEFAULT_USER: guest
                  RABBITMQ_DEFAULT_PASS: guest

      steps:
          -   name: Install apt packages
              run: |
                  sudo apt update && sudo apt-get install -f libcurl4-openssl-dev libssl-dev libgnutls28-dev httping expect libmemcached-dev
          -   uses: actions/checkout@v3
          -   name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v3
              with:
                  python-version: ${{ matrix.python-version }}

          -   name: Get pip cache dir
              id: pip-cache
              run: |
                  echo "::set-output name=dir::$(pip cache dir)"
          -   name: Install tox
              run: python -m pip install tox
          -   name: >
                  Run tox for
                  "${{ matrix.python-version }}-integration-${{ matrix.toxenv }}"
              timeout-minutes: 60
              run: >
                  tox --verbose --verbose -e
                  "${{ matrix.python-version }}-integration-${{ matrix.toxenv }}" -vv
