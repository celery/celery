[tool.poetry]
name = "celery"
version = "5.3.0b2"
description = "Distributed Task Queue."
license = "BSD-3-Clause"
authors = ["Ask Solem <auvipy@gmail.com>"]
homepage = "https://docs.celeryq.dev/"
keywords = ["task", "queue", "job", "async", "rabbitmq", "amqp", "redis", "python", "distributed", "actor"] 
classifiers = []
include = ["CONTRIBUTORS.txt", "Changelog.rst", "LICENSE", "README.rst", "TODO", "docs/**", "extra/**", "examples/*", "t/**/*.py", "t/**/*.rst", "celery/utils/static/*.png"]
exclude = ["docs/_build/*"]

[tool.poetry.dependencies]
python = "^3.7"
billiard = "^4.1.0"
kombu = "^5.3.0b3"
vine = "^5.0.0"
click = "^8.1.2"
click-didyoumean = "^0.3.0"
click-repl = "^0.2.0"
click-plugins = "^1.1.1"
importlib-metadata = { version = "^3.6", python = "<3.8" }
backports = { version = "^0.2.1", python = "<3.9" }
tzdata = ">=2022.7"

pyArango = { version = "^2.0.1", optional = true }
cryptography = { version = "40.0.1", optional = true }
azure-storage-blob = { version = "40.0.1", optional = true }
cassandra-driver = { version = "^3.25.0", optional = true }
python-consul2 = { version = "0.1.5", optional = true }
pydocumentdb = { version = "2.3.5", optional = true }
Django = { version = ">=2.2.28", optional = true }
elasticsearch = { version = "<8.0", optional = true }
eventlet = { version = ">=0.32.0", python = "<3.10", optional = true }
gevent = { version = ">=1.5.0", optional = true }
librabbitmq = { version = ">=1.5.0", optional = true }
pylibmc = { version = "1.6.3", markers = "platform_system != 'Windows'", optional = true }
pymongo = { version = ">=4.0.2", extras = ["srv"], optional = true }
msgpack = { version = "1.0.5", optional = true }
python-memcached = { version = "1.59", optional = true }
pyro5 = { version = "*", optional = true }
pytest-celery = { version = "0.0.0", optional = true }
redis = { version = "^4.3.6", optional = true }
boto3 = { version = "1.26.110", optional = true }
softlayer_messaging = { version = ">1.0.3", optional = true }
ephem = { version = "4.1.4", markers = "platform_python_implementation != 'PyPy'", optional = true }
sqlalchemy = { version = "^1.4.47", optional = true }
zstandard = { version = "0.20.0", optional = true }
kazoo = { version = ">=1.3.1", optional = true }
PyYAML = { version = ">=3.10", optional = true }
pycouchdb = { version = "1.14.2", optional = true }

[tool.poetry.group.test.dependencies]
pytest = "7.3.1"
pytest-celery = "0.0.0"
pytest-subtests = "0.10.0"
pytest-timeout = "2.1.0"
pytest-click = "1.1.0"
pytest-order = "1.1.0"
boto3 = "^1.26.114"
moto = "^4.1.7"
mypy = { version = "1.2.0", markers = "platform_python_implementation == 'CPython'" }
pre-commit = "2.21.0"
PyYAML = "^3.10"
pymongo = { version = "^4.0.2", extras = ["srv"]}
msgpack = "1.0.5"

[tool.poetry.extras]
arangodb = ["pyArango"]
auth = ["cryptography"]
azureblockblob = ["azure-storage-blob"]
brotli = [] 
cassandra = ["cassandra-driver"]
consul = ["python-consul2"]
cosmosdbsql = ["pydocumentdb"]
couchbase = []
couchdb = ["pycouchdb"]
django = ["Django"]
dynamodb = ["boto3"]
elasticsearch = ["elasticsearch"]
eventlet = ["eventlet"]
gevent = ["gevent"]
librabbitmq = ["librabbitmq"]
memcache = ["pylibmc"]
mongodb = ["pymongo"]
msgpack = ["msgpack"]
pymemcache = ["python-memcached"]
pyro = ["pyro5"]
pytest = ["pytest-celery"]
redis = ["redis"]
s3 = ["boto3"]
slmq = ["softlayer_messaging"]
solar = ["ephem"]
sqlalchemy = ["sqlalchemy"]
sqs = ["kombu"]
tblib = []
yaml = ["PyYAML"]
zookeeper = ["kazoo"]
zstd = ["zstandard"]

[tool.poetry.scripts]
celery = "celery.__main__:main"

[tool.pytest.ini_options]
addopts = "--strict-markers"
testpaths = "t/unit/"
python_classes = "test_*"
xfail_strict=true
markers = ["sleepdeprived_patched_module", "masked_modules", "patched_environ", "patched_module", "flaky", "timeout"]

[tool.mypy]
warn_unused_configs = true
strict = false
follow_imports = "skip"
show_error_codes = true
disallow_untyped_defs = true
ignore_missing_imports = true
files = [
    "celery/__main__.py",
    "celery/states.py",
    "celery/signals.py",
    "celery/fixups",
    "celery/concurrency/thread.py",
    "celery/security/certificate.py",
    "celery/utils/text.py",
    "celery/schedules.py",
    "celery/apps/beat.py",
]

[tool.coverage.run]
branch = true
cover_pylib = false
include = ["*celery/*"]
omit = ["celery.tests.*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "except ImportError:"
]
omit = [
    "*/python?.?/*",
    "*/site-packages/*",
    "*/pypy/*",
    "*/celery/bin/graph.py",
    "*celery/bin/logtool.py",
    "*celery/task/base.py",
    "*celery/contrib/sphinx.py",
    "*celery/concurrency/asynpool.py",
    "*celery/utils/debug.py",
    "*celery/contrib/testing/*",
    "*celery/contrib/pytest.py"
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"