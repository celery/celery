[tox]
envlist =
    {2.7,pypy,3.4,3.5,3.6,3.7}-unit
    {2.7,pypy,3.4,3.5,3.6,3.7}-integration-{rabbitmq,redis,dynamodb,azureblockblob}

    flake8
    flakeplus
    apicheck
    configcheck
    pydocstyle
    bandit

[testenv]
deps=
    -r{toxinidir}/requirements/default.txt
    -r{toxinidir}/requirements/test.txt
    -r{toxinidir}/requirements/docs.txt
    -r{toxinidir}/requirements/pkgutils.txt

    2.7: -r{toxinidir}/requirements/test-ci-default.txt
    3.4,3.5,3.6,3.7: -r{toxinidir}/requirements/test-ci-default.txt
    pypy: -r{toxinidir}/requirements/test-ci-base.txt

    integration: -r{toxinidir}/requirements/test-integration.txt

    linkcheck,apicheck,configcheck: -r{toxinidir}/requirements/docs.txt
    flake8,flakeplus,pydocstyle: -r{toxinidir}/requirements/pkgutils.txt
    bandit: bandit
sitepackages = False
recreate = False
commands =
    unit: py.test -xv --cov=celery --cov-report=xml --cov-report term {posargs}
    integration: py.test -xsv t/integration {posargs}
setenv =
    BOTO_CONFIG = /dev/null
    WORKER_LOGLEVEL = INFO
    PYTHONIOENCODING = UTF-8

    rabbitmq: TEST_BROKER=pyamqp://
    rabbitmq: TEST_BACKEND=rpc

    redis: TEST_BROKER=redis://
    redis: TEST_BACKEND=redis://

    dynamodb: TEST_BROKER=redis://
    dynamodb: TEST_BACKEND=dynamodb://@localhost:8000
    dynamodb: AWS_ACCESS_KEY_ID=test_aws_key_id
    dynamodb: AWS_SECRET_ACCESS_KEY=test_aws_secret_key

    azureblockblob: TEST_BROKER=redis://
    azureblockblob: TEST_BACKEND=azureblockblob://DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;
passenv =
    TRAVIS
    AZUREBLOCKBLOB_URL
basepython =
    2.7: python2.7
    3.4: python3.4
    3.5: python3.5
    3.6: python3.6
    3.7: python3.7
    pypy: pypy
    flake8,apicheck,linkcheck,configcheck,pydocstyle,bandit: python3.7
    flakeplus: python2.7
usedevelop = True
install_command = python -m pip --disable-pip-version-check install {opts} {packages}

[testenv:apicheck]
setenv =
    PYTHONHASHSEED = 100
commands =
    sphinx-build -j2 -b apicheck -d {envtmpdir}/doctrees docs docs/_build/apicheck

[testenv:configcheck]
commands =
    sphinx-build -j2 -b configcheck -d {envtmpdir}/doctrees docs docs/_build/configcheck

[testenv:linkcheck]
commands =
    sphinx-build -j2 -b linkcheck -d {envtmpdir}/doctrees docs docs/_build/linkcheck

[testenv:bandit]
commands =
    bandit -b bandit.json -r celery/

[testenv:flake8]
commands =
    flake8 -j 2 {toxinidir}/celery {toxinidir}/t

[testenv:flakeplus]
commands =
    flakeplus --2.7 {toxinidir}/celery {toxinidir}/t

[testenv:pydocstyle]
commands =
    pydocstyle {toxinidir}/celery
